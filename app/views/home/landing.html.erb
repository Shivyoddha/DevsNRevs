<%= stylesheet_link_tag 'landing'%>
<%= render 'navbar'%>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
 <div id="overlay"></div>
<div id="loader" style="z-index:1000;">
  <center><h3 style="margin-top:50px;margin-left:5px;">Wait while,<br> Your online vet is checking your pet!</h3><center>
<br><br><br><br><br><br><br><br><br><br>Till then increase your knowledge about your pet <br><br>
 <button id="myButton" class="button-53" role="button">Get Facts</button>
 <br>
  <b><div id="apiResponse"></div></b>
</div>

<section  class="heading">
  <%=image_tag "hospital.jpg",class:"image", id:"background", style:"width:100%;"%>
  <%=image_tag "vet.png",class:"image", id:"vet1", style:"width:20%;"%>
  <%=image_tag "vet2.png",class:"image", id:"vet2", style:"width:40%;"%>
  <h2 id="text"><span>Healthy Pets, Happy Hearts<br></span>Your Pet's Health Journey Starts Here!</h2>
</section>
<section class="about" style="background-color:black;">
        <h2 id="text2">Diagnose Your Pet</h2>
  <div class="contain" id="second">
    <div class="lefty" id="first">
    1)  Image Input: Users can upload images of their pets and provide additional details about the dog, including its name, age, breed, and activity level. This information helps in narrowing down the potential diseases.
<br><br>
    2)  Machine Learning Model: Your input is then processed by a machine learning model that we've developed. This model has been trained on a comprehensive dataset that we prepared, ensuring high accuracy in disease detection.
<br><br>
    3)  Top 3 Disease Identification: The model identifies the top three possible diseases based on the input data. It does this by leveraging our custom APIs hosted on Hugging Face.
<br><br>
    4)  Detailed Disease Report: A comprehensive report is generated, detailing the identified diseases, their causes, symptoms, and recommended remedies. This information is provided with the assistance of ChatGPT from OpenAI, which uses its powerful natural language understanding capabilities.
<br><br>
    5)  Additional Information: We have integrated APIs for the number of cups of food, nutritional information, and dog images for various breeds, hosted on Hugging Face. Additionally, we extend our gratitude to Postman for their invaluable assistance in utilizing these APIs.
<br><br>
    6)  Downloadable Report: Users can easily download the generated report. This report serves as a valuable reference and empowers pet owners to take informed action regarding their pet's health.
    </div>
    <div class="righty">
      <div class="">
        <p><b>Enter your pet details :</b></p>
        <div class="formy">
          <%= form_with(url: home_show_path(format: :pdf), method: :post, multipart: true) do |form| %>
            <div class="input-group mb-3">
              <span class="input-group-text">Pet Image :</span>
              <%= form.file_field :image, class: "form-control" , required: true %>
            </div>

            <div class="input-group mb-3">
              <span class="input-group-text">Pet Name :</span>
              <%= form.text_field :name, class: "form-control", required: true  %>
            </div>

            <div class="input-group mb-3">
              <span class="input-group-text">Pet Age (in years):</span>
              <%= form.number_field :age, class: "form-control" , required: true %>
            </div>

            <div class="input-group mb-3">
              <span class="input-group-text">Pet Weight (in lbs) :</span>
              <%= form.number_field :weight, step: 'any', class: "form-control" , required: true %>
            </div>

            <div class="input-group mb-3">
              <span class="input-group-text">Pet Height (in inches) :</span>
              <%= form.number_field :height, step: 'any', class: "form-control", required: true  %>
            </div>

            <div class="input-group mb-3">
              <span class="input-group-text">Pet Activity :</span>
              <%= form.select :activity, options_for_select([["Typical", "Typical"], ["Active", "Active"], ["Overweight", "Overweight"],
         ["Highly Active", "Highly Active"], ["Senior, neutered, inactive", "Senior, neutered, inactive"],
          ["Working Dog (light duty)", "Working Dog (light duty)"], ["Working Dog (moderate duty)", "Working Dog (moderate duty)"], ["Working Dog (heavy duty)", "Working Dog (heavy duty)"],]), {}, class: "custom-dropdown" %>
            </div>

            <div class="input-group mb-3">
              <span class="input-group-text">Pet Breed :</span>
              <%= form.select :breed, options_for_select([
       ["Australian Shepherd", "Australian Shepherd"],
       ["Basset Hound", "Basset Hound"],
       ["Bernedoodle", "Bernedoodle"],
       ["Bichon Frise", "Bichon Frise"],
       ["Boston Terrier", "Boston Terrier"],
       ["Boxer", "Boxer"],
       ["Boykin Spaniel", "Boykin Spaniel"],
       ["Cairn Terrier", "Cairn Terrier"],
       ["Cane Corso", "Cane Corso"],
       ["Cane Corso Puppy", "Cane Corso Puppy"],
       ["Catahoula Leopard", "Catahoula Leopard"],
       ["Chihuahua", "Chihuahua"],
       ["Corgi", "Corgi"],
       ["Dachshund", "Dachshund"],
       ["Doberman Pinscher", "Doberman Pinscher"],
       ["French Bulldog", "French Bulldog"],
       ["German Shepherd", "German Shepherd"],
       ["Golden Retriever", "Golden Retriever"],
       ["Goldendoodle", "Goldendoodle"],
       ["Havanese", "Havanese"],
       ["Jack Russell", "Jack Russell"],
       ["Labradoodle", "Labradoodle"],
       ["Labrador Retriever", "Labrador Retriever"],
       ["Maltese", "Maltese"],
       ["Miniature Schnauzer", "Miniature Schnauzer"],
       ["Pitbull", "Pitbull"],
       ["Pomeranian", "Pomeranian"],
       ["Rottweiler Puppy", "Rottweiler Puppy"],
       ["Shiba Inu", "Shiba Inu"],
       ["Shih Tzu", "Shih Tzu"],
       ["Siberian Husky", "Siberian Husky"],
       ["Weimaraner", "Weimaraner"],
       ["Vizsla", "Vizsla"],
       ["Yorkie", "Yorkie"]
     ]), {}, class: "custom-dropdown" %>
    </div>

            <%= form.submit "Submit", class: 'button-52', id:'loaderstart' %>
          <% end %>
        </div>
        </div>
    </div>
  </div>
</section>

<script type="text/javascript">
  let vet = document.getElementById("vet1");
  let vet2 = document.getElementById("vet2");
  let text = document.getElementById("text");
  var overlay = document.getElementById("overlay");

  window.addEventListener("scroll",()=>{
    let value = window.scrollY;
    vet.style.right = (10000+value*0.5) + "px";
    vet2.style.left = (1000+value*0.5) + "px";
  })

  document.addEventListener("DOMContentLoaded", function() {
    var loader = document.getElementById("loader");
    loader.style.display = "none";
    overlay.style.display = "none";
  });
  var factsFetched = false; // Flag to track whether facts have been fetched

  function fetchDogFact() {
    $.ajax({
      url: '/fetch_dog_facts', // Route to your controller action
      method: 'GET',
      success: function (data) {
        $('#apiResponse').text('"' + data + '"'); // Update the content with the new dog fact
      },
      error: function (error) {
        console.error('Error fetching dog fact:', error);
      }
    });
  }

  // Attach a click event listener to the button
  $('#myButton').on('click', function () {
    if (!factsFetched) { // Check if facts have not been fetched yet
      fetchDogFact(); // Fetch dog fact for the first time when the button is clicked
      factsFetched = true; // Set the flag to indicate that facts have been fetched
    }
  });

  // Attach a click event listener to the button
  $('#loaderstart').on('click', function () {
    var loader = document.getElementById("loader");
    loader.style.display = "flex";
    overlay.style.display = "block";
    // if (!factsFetched) { // Check if facts have not been fetched yet
    //   fetchDogFact(); // Fetch dog fact for the first time when the button is clicked
    //   factsFetched = true; // Set the flag to indicate that facts have been fetched
    // }
  });
  // Call fetchDogFact every 7 seconds after the first button click
  setInterval(function () {
    if (factsFetched) { // Check if facts have been fetched
      fetchDogFact();
    }
  }, 7000);
</script>
